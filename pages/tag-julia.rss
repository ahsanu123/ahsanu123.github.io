<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Home</title><link></link><description></description><pubDate>Sun, 01 Jun 2025 00:00:00 GMT</pubDate><lastBuildDate>Sun, 01 Jun 2025 13:01:54 GMT</lastBuildDate><generator>marmite</generator><item><title>Setup Julia in Neovim</title><link>/setup-julia-in-neovim.html</link><category>linux</category><category>setup</category><category>julia</category><guid>/setup-julia-in-neovim.html</guid><pubDate>Sun, 01 Jun 2025 00:00:00 GMT</pubDate><source url="">tag-julia</source><content:encoded><![CDATA[<h1><a href="#-setup-julia-in-neovim" aria-hidden="true" class="anchor" id="-setup-julia-in-neovim"></a>ðŸ”¬ Setup Julia in Neovim</h1>
<blockquote>
<p>short guide about setup <a href="https://julialang.org/">Julia</a></p>
</blockquote>
<p>This Week I try to setup Julia Development in Neovim in linux/wsl, I use <a href="https://www.lazyvim.org/">lazyvim</a> (read the installation on lazyvim doc).</p>
<p>after initial setup in lazyvim, you need install julia-lsp with <code>Mason</code> then search <code>julia-lsp</code>
it will install julia lsp on your <code>~/.local/share/nvim/mason/packages/julia-lsp</code></p>
<ul>
<li>install juliaup (i use yay, pacman not provide it) <code>yay -S juliaup --noconfirm</code></li>
<li>then install latest stable version with <code>juliaup add &lt;version&gt;</code>, to list version run <code>juliaup list</code></li>
<li>after install, make latest stable version as juliaup default with <code>juliaup default &lt;version&gt;</code></li>
<li>next go to julia folder <code>cd ~/.julia/environments/v1.11/</code></li>
<li>it may contain <code>mainfest.toml and project.toml</code>, if not, try to create new project then add package in this folder  (as shown below)</li>
</ul>
<pre><code class="language-shell">
[deps]
GLMakie = &quot;e9467ef8-e4e7-5192-8a1a-b1aee30e663a&quot;
Makie = &quot;ee78f7c6-11fb-53f2-987a-cfe4a2b5a57a&quot;
PackageCompiler = &quot;9b87118b-4619-50d2-8e1e-99f35a4d4d9d&quot;

</code></pre>
<ul>
<li>next run julia with <code>julia</code> then enter Pkg with <code>]</code></li>
<li>active current env with <code>activate .</code></li>
<li>and run <code>precompile</code></li>
<li>it will compile all needed package for your project</li>
<li>then try to create or open project outside of <code>.julia</code></li>
<li>when you first open julia project it may run slow / timeout, because the server itself is not compiled yet, julia will compile (based on your system it may slow or fast), then after first compile it able to indexing your project</li>
<li>in neovim you can see lsp log with <code>LspLog</code></li>
</ul>
<pre><code class="language-shell">
[ERROR][2025-06-01 19:42:29] ...p/_transport.lua:36	&quot;rpc&quot;	&quot;/home/ah/.local/share/nvim/mason/bin/julia-lsp&quot;	&quot;stderr&quot;	&quot;[ Info: Starting LS with Julia 1.11.5\n&quot;
[ERROR][2025-06-01 19:42:30] ...p/_transport.lua:36	&quot;rpc&quot;	&quot;/home/ah/.local/share/nvim/mason/bin/julia-lsp&quot;	&quot;stderr&quot;	&quot;  Activating project at `~/.local/share/nvim/mason/packages/julia-lsp/libexec/extension/scripts/environments/languageserver/v1.11`\n&quot;
[ERROR][2025-06-01 19:42:30] ...p/_transport.lua:36	&quot;rpc&quot;	&quot;/home/ah/.local/share/nvim/mason/bin/julia-lsp&quot;	&quot;stderr&quot;	&quot;[ Info: Starting the Julia Language Server\n&quot;
</code></pre>
<ul>
<li>if first trigger compiling not work from neovim (by opening julia file), try to trigger by run the server from mason folder <code>~/.local/share/nvim/mason/bin </code> then <code>./julia-lsp ~/path/to/external/julia/project</code></li>
</ul>
]]></content:encoded></item></channel></rss>