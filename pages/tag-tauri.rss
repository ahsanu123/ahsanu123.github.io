<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Home</title><link></link><description></description><pubDate>Thu, 27 Mar 2025 00:00:00 GMT</pubDate><lastBuildDate>Sun, 01 Jun 2025 13:01:54 GMT</lastBuildDate><generator>marmite</generator><item><title>Cross Compile Tauri on Docker Archlinuxarm for Raspberry pi zero 2w</title><link>/cross-compile-tauri-on-docker-archlinuxarm-for-raspberry-pi-zero-2w.html</link><category>linux</category><category>howto</category><category>tauri</category><guid>/cross-compile-tauri-on-docker-archlinuxarm-for-raspberry-pi-zero-2w.html</guid><pubDate>Thu, 27 Mar 2025 00:00:00 GMT</pubDate><source url="">tag-tauri</source><content:encoded><![CDATA[<h1><a href="#-cross-compile-tauri-on-docker-archlinuxarm-for-raspberry-pi-zero-2w" aria-hidden="true" class="anchor" id="-cross-compile-tauri-on-docker-archlinuxarm-for-raspberry-pi-zero-2w"></a>üçÑ Cross Compile Tauri on Docker Archlinuxarm for Raspberry pi zero 2w</h1>
<blockquote>
<p>Its just quick note about setup and cross compile tauri for archlinuxarm architecture in docker</p>
</blockquote>
<p>first you need Docker installed on your system</p>
<pre><code class="language-shell">$ docker --version
Docker version 28.0.1, build 068a01ea94  
</code></pre>
<ul>
<li>download Archlinuxarm image with <code>wget http://os.archlinuxarm.org/os/ArchLinuxARM-rpi-armv7-latest.tar.gz</code></li>
<li>next create folder to extract it <code>mkdir archlinuxarm</code></li>
<li>extract to <code>archlinuxarm</code> by <code>tar -xpf ArchLinuxARM-rpi-armv7-latest.tar.gz -C archlinuxarm</code></li>
<li>then change directory with <code>cd archlinuxarm</code></li>
<li>now we will import extracted file to docker with <code>tar -cpf - . | docker import - archlinuxarm:latest</code></li>
<li>then run with, <code>docker run -it --rm archlinuxarm:latest /bin/bash </code>, it will run bash with interactive shell <code>--rm</code> will remove all data after you logout from shell</li>
<li>if error when docker run, try to add qemu -&gt; <code>docker run --rm --privileged multiarch/qemu-user-static --reset -p yes</code></li>
<li>init pacman key with <code>pacman-key --init</code></li>
<li>then <code>pacman-key --populate archlinuxarm</code></li>
<li>finally update all package with <code>pacman -Syu</code></li>
<li>next we will install required package to cross compile <code>sudo  pacman  -S  --needed   webkit2gtk-4.1   base-devel  curl   wget   file   openssl   appmenu-gtk-module   libappindicator-gtk3  librsvg yarn</code></li>
<li>install rust and rustup <code>pacman -S rustup</code></li>
<li>then install default toolchain for current architecture with <code>rustup default stable</code></li>
<li>we need node js to compile our frontend, <code>pacman -S nodejs</code></li>
<li>you need postgresql libs if you work with postgresql in rust, <code>pacman -S postgresql-libs</code></li>
<li>to save docker run -&gt; docker ps &amp;&amp; docker commit &lt;container_id_or_name&gt; my-custom-image</li>
<li>to copy from docker container use <code> docker cp tauri-container:/root/ams/app/src-tauri/target/release/bundle/deb/ams_0.1.0_armel.deb .</code></li>
<li>to run docker with name use <code> docker run -it --rm --name tauri-container archlinuxarm:latest  /bin/bash</code></li>
</ul>
]]></content:encoded></item></channel></rss>